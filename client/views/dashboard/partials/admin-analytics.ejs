<!-- Analytics & Reporting Section -->
<div id="analytics-reporting" class="mt-24">
    <h2 class="text-2xl font-bold text-gray-900 mb-6">Analytics & Reporting</h2>

    <!-- Summary Stats -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-700">Total Users</h3>
            <p id="stats-total-users" class="text-3xl font-bold text-primary mt-2">0</p>
        </div>
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-700">Total Projects</h3>
            <p id="stats-total-projects" class="text-3xl font-bold text-primary mt-2">0</p>
        </div>
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-700">Total Funding</h3>
            <p id="stats-total-funding" class="text-3xl font-bold text-primary mt-2">$0</p>
        </div>
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-700">Pending Apps</h3>
            <p id="stats-pending-apps" class="text-3xl font-bold text-primary mt-2">0</p>
        </div>
    </div>

    <!-- Charts -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- User Registrations Chart -->
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-700 mb-4">User Registrations (Last 30 Days)</h3>
            <div class="relative h-80">
                <canvas id="userRegistrationsChart"></canvas>
            </div>
        </div>

        <!-- Projects by Industry Chart -->
        <div class="bg-white rounded-lg shadow p-6 flex flex-col">
            <h3 class="text-lg font-semibold text-gray-700 mb-4">Projects by Industry</h3>
            <div class="relative flex-grow flex items-center justify-center h-80">
                <canvas id="projectsByIndustryChart"></canvas>
            </div>
        </div>

        <!-- Funding Activity Chart -->
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-700 mb-4">Funding Activity (Last 12 Months)</h3>
            <div class="relative h-80">
                <canvas id="fundingActivityChart"></canvas>
            </div>
        </div>

        <!-- Application Status Chart -->
        <div class="bg-white rounded-lg shadow p-6 flex flex-col">
            <h3 class="text-lg font-semibold text-gray-700 mb-4">Application Status</h3>
            <div class="relative flex-grow flex items-center justify-center h-80">
                <canvas id="applicationStatusChart"></canvas>
            </div>
        </div>
    </div>
</div>

<script>
    // Ensure this script runs only once
    if (!document.getElementById('analytics-reporting').dataset.initialized) {
        document.getElementById('analytics-reporting').dataset.initialized = true;

        document.addEventListener('DOMContentLoaded', async function() {
            if ('<%= role %>' !== 'admin') return;

            try {
                const response = await fetch('/analytics');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const analyticsData = await response.json();

                // Populate Summary Stats
                document.getElementById('stats-total-users').textContent = analyticsData.summaryStats.totalUsers;
                document.getElementById('stats-total-projects').textContent = analyticsData.summaryStats.totalProjects;
                document.getElementById('stats-total-funding').textContent = `Kshs${analyticsData.summaryStats.totalFunding.toLocaleString()}`;
                document.getElementById('stats-pending-apps').textContent = analyticsData.summaryStats.pendingApps;

                // --- Initialize Charts ---
                
                // User Registrations Chart (Line)
                new Chart(document.getElementById('userRegistrationsChart'), {
                    type: 'line',
                    data: {
                        labels: analyticsData.userRegistrations.labels,
                        datasets: [{
                            label: 'New Users',
                            data: analyticsData.userRegistrations.data,
                            borderColor: '#3b82f6',
                            backgroundColor: 'rgba(59, 130, 246, 0.1)',
                            fill: true,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: { y: { beginAtZero: true } }
                    }
                });

                // Projects by Industry Chart (Doughnut)
                new Chart(document.getElementById('projectsByIndustryChart'), {
                    type: 'doughnut',
                    data: {
                        labels: analyticsData.projectsByIndustry.labels,
                        datasets: [{
                            label: 'Projects',
                            data: analyticsData.projectsByIndustry.data,
                            backgroundColor: ['#3b82f6', '#60a5fa', '#93c5fd', '#bfdbfe']
                        }]
                    },
                    options: { 
                        responsive: true,
                        maintainAspectRatio: false
                    }
                });

                // Funding Activity Chart (Line) - Placeholder
                new Chart(document.getElementById('fundingActivityChart'), {
                    type: 'line',
                    data: {
                        labels: analyticsData.fundingActivity.labels,
                        datasets: [{
                            label: 'Total Funding ($)',
                            data: analyticsData.fundingActivity.data,
                            borderColor: '#10b981',
                            backgroundColor: 'rgba(16, 185, 129, 0.1)',
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: { y: { beginAtZero: true } }
                    }
                });

                // Application Status Chart (Pie)
                const appStatusData = analyticsData.applicationStatus.data;
                const totalApplications = appStatusData.reduce((sum, count) => sum + count, 0);

                if (totalApplications > 0) {
                    new Chart(document.getElementById('applicationStatusChart'), {
                        type: 'pie',
                        data: {
                            labels: ['Pending', 'Accepted', 'Rejected'],
                            datasets: [{
                                label: 'Applications',
                                data: appStatusData,
                                backgroundColor: ['#f59e0b', '#10b981', '#ef4444']
                            }]
                        },
                        options: { 
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    });
                } else {
                    const chartContainer = document.getElementById('applicationStatusChart').parentNode;
                    chartContainer.innerHTML = `<div class="flex items-center justify-center h-full">
                                                  <p class="text-gray-500">No application data to display.</p>
                                                </div>`;
                }

            } catch (error) {
                console.error('Error fetching or rendering analytics data:', error);
                document.getElementById('analytics-reporting').innerHTML = '<p class="text-red-500 text-center">Failed to load analytics data.</p>';
            }
        });
    }
</script>
