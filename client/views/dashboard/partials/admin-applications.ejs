<div id="application-management" class="mt-12">
    <h2 class="text-2xl font-bold text-gray-900 mb-4">Application Management</h2>
    <div class="bg-white rounded-lg shadow p-6">
        <!-- Filters -->
        <div class="mb-4">
            <div class="flex space-x-2">
                <button data-status="all" class="filter-btn bg-primary text-white font-semibold py-2 px-4 rounded-lg shadow-md">All</button>
                <button data-status="pending" class="filter-btn bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg">Pending</button>
                <button data-status="accepted" class="filter-btn bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg">Accepted</button>
                <button data-status="rejected" class="filter-btn bg-gray-200 text-gray-700 font-semibold py-2 px-4 rounded-lg">Rejected</button>
            </div>
        </div>

        <!-- Table -->
        <div class="overflow-x-auto">
            <table class="w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Project</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Applicant</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date Applied</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody id="applications-table-body" class="bg-white divide-y divide-gray-200">
                    <!-- Rows will be dynamically inserted here -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    // Ensure this script runs only once, even if the partial is re-rendered.
    if (!document.getElementById('application-management').dataset.initialized) {
        document.getElementById('application-management').dataset.initialized = true;

        document.addEventListener('DOMContentLoaded', function() {
            if ('<%= role %>' !== 'admin') return;

            const filterButtons = document.querySelectorAll('.filter-btn');
            const tableBody = document.getElementById('applications-table-body');

            const fetchAndDisplayApplications = async (status = 'all') => {
                try {
                    tableBody.innerHTML = `<tr><td colspan="6" class="text-center py-4">Loading...</td></tr>`;
                    const response = await fetch(`/applications?status=${status}`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const applications = await response.json();

                    tableBody.innerHTML = ''; // Clear loading/existing rows

                    if (applications && applications.length > 0) {
                        applications.forEach(app => {
                            const createdAt = app.createdAt ? new Date(app.createdAt).toLocaleDateString() : 'N/A';
                            const statusClass = app.status === 'accepted' ? 'bg-green-100 text-green-800' : (app.status === 'rejected' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800');
                            
                            const row = `
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${app.projectName || 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${app.applicantName || 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${app.role || 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${createdAt}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusClass}">
                                            ${app.status ? app.status.charAt(0).toUpperCase() + app.status.slice(1) : 'N/A'}
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <a href="#" class="text-primary hover:text-primary-dark">View</a>
                                    </td>
                                </tr>
                            `;
                            tableBody.innerHTML += row;
                        });
                    } else {
                        tableBody.innerHTML = `<tr><td colspan="6" class="text-center py-4">No applications found for this filter.</td></tr>`;
                    }
                } catch (error) {
                    console.error('Error fetching applications:', error);
                    tableBody.innerHTML = `<tr><td colspan="6" class="text-center py-4 text-red-500">Failed to load applications.</td></tr>`;
                }
            };

            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    filterButtons.forEach(btn => {
                        btn.classList.remove('bg-primary', 'text-white', 'shadow-md');
                        btn.classList.add('bg-gray-200', 'text-gray-700');
                    });
                    button.classList.add('bg-primary', 'text-white', 'shadow-md');
                    button.classList.remove('bg-gray-200', 'text-gray-700');

                    const status = button.dataset.status;
                    fetchAndDisplayApplications(status);
                });
            });

            fetchAndDisplayApplications('all');
        });
    }
</script>
